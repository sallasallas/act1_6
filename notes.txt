--- PASOS PARA LA EXPOSICION --
1 presentacion y requeriminetos
    - requerimientos: saber python, entorno instalado, IDE, git con la actividad, FLASK visto en ateriores exposiciones
2 EXPLICAR LO QUE SE VA A VER :
    - FLASK
        - Enrutamiento (usando decorador app.route)
        - RENDERIZADO (JINJA2)
        - ARCHIVOS ESTATICOS
        - API SENCILLA
        - CONECCIONES A BD (sqlite3)

3 PASOS A SEGUIR PARA EL TALLER
# INTRO
     - INSTALAR Y/O VERIFICAR VENV, FLASK
     - EXPLICA ESTRUCTUA INICIAL
        FLASK
            .venv (con flask instalado)
            utility.py (completo)
            actividades.py (con una funcion llamada calcular_descuento con el contenido de actividades.activiad4.calcular y una clase llamada crud_product basadao en actividades.actividad5 )
            app.py (vacio)
            templates
                actividad1.html ( que es actividad4_index.html y servira para la act 1 al 4)
                actividad1_resultado.html ( que es actividad4_resultado.html y servira para la act 1 al 4)
                actividad2.html (que es actividad6_index.html y servira para act 5 y 6)
                actividad2_table.html (que es actividad6_table.html y servira para act 5 y 6)
            static
                my_style.css (mismo archivo)
     - ESCRIBE EL HELLO WORLD EN app.py
     - flask --app main run --debug
     - ARRUINA EL CODIGO y explica Diferencias entre usar DEBUG y no DEBUG
 # ACTIVIDAD 1
     - crear archivo actividades.py, carpeta templates e actividad.html dentro de templates
     - pasar codigo de actividad.html o directamente el archivo
     - escribir activiades.actividad con el contenido de actividad2
     - modificar la funcion en app.hello_world con el contendido de app.actividad2
     - modificar app.hello_world con el contenido de app.activiadad4 (importar caclular_contenido recien creado como sustituto de Activiad4())
     - modificar TEMPLATES actividad1 y actividad1_resultado las URL del form
 # ACTIVIDAD 2
     - explica que es sqlite
     - Explica actividad.crud_product y el concepto de modelo de base de datos
     - Explica actividad.crud_product como tema para conexiones a sqlite efasis en el metodo start
     - API CRUD :
         - crea app.prod_list con el contenido de app.act5_list
         - crea app.prod_get con el contenido de app.act5_get
         - crea app.prod_insert con el contenido de app.act5_insert
         - crea app.prod_delete con el contenido de app.act5_delete
     - SINGLE PAGE APPLICATION (APP) using AJAX
         - crea app.productos con el contenido de app.mostrar_actividad6
         - crea app.productos_list con el contenido de app.list_actividad6
         - modificar TEMPLATES actividad2 y actividad1_table las URL del form

-- CONCEPTOS VISTOS --
    FLASK
    ENRUTAMIENTO
    RENDERIZADO
    RENDERIZADO PARCIAL
    JINJA2
    DECORADOR
    SQLITE
    API
    ENDPOINT
    TEMPLATES/PLANTILLAS
    HELLO WORLD
    ARCHIVOS ESTATICOS
    JSON
    AJAX
    CRUD
    SINGLE PAGE Application (SPA)
    JQUERY
    SERVER SIDE
    ESQUEMA DE BD/ SCHEMA
    TODO


-- referencias y recursos --
https://flask.palletsprojects.com/es/stable/quickstart/
https://flask-es.readthedocs.io/patterns/sqlite3/
https://www.w3schools.com/xml/ajax_intro.asp
https://jquery.com/
https://sqlite.org/index.html
https://codesandbox.io/
https://www.geeksforgeeks.org/javascript/what-is-single-page-application/

